/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 14 17:37:40 GMT 2019
 */

package com.saud_dev.technology_assessment.validators;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.fail;

import org.junit.Test;

public class CustomerValidator_Test {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CustomerValidator.validateTimeAsCustomer("4");
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        CustomerValidator.validateTimeAsCustomer("customer");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 400 BAD_REQUEST \"Invalid Parameter value for time_as_customer: customer\"; nested exception is java.lang.NumberFormatException: For input string: \"customer\"
         //
         verifyException("com.saud_dev.technology_assessment.validators.CustomerValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CustomerValidator.validateTimeAsCustomer((String) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CustomerValidator.validateCustomer("employee");
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CustomerValidator.validateCustomer("customer");
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CustomerValidator.validateCustomer("affiliate");
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        CustomerValidator.validateCustomer("affiliaUe");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 400 BAD_REQUEST \"Invalid parameter for customer type: affiliaUe\"
         //
         verifyException("com.saud_dev.technology_assessment.validators.CustomerValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try { 
        CustomerValidator.validateCustomer("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 400 BAD_REQUEST \"Invalid parameter, customer cannot be empty\"
         //
         verifyException("com.saud_dev.technology_assessment.validators.CustomerValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      // Undeclared exception!
      try { 
        CustomerValidator.validateCustomer((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 400 BAD_REQUEST \"Invalid parameter, customer cannot be empty\"
         //
         verifyException("com.saud_dev.technology_assessment.validators.CustomerValidator", e);
      }
  }
}
