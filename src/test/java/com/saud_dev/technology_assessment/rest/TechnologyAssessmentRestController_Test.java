/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 14 17:42:45 GMT 2019
 */

package com.saud_dev.technology_assessment.rest;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.fail;

import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.Test;

import com.saud_dev.technology_assessment.model.receipt.Receipt;
import com.saud_dev.technology_assessment.service.TechnologyAssessmentService;

public class TechnologyAssessmentRestController_Test {

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Receipt receipt0 = new Receipt();
      TechnologyAssessmentRestController technologyAssessmentRestController0 = new TechnologyAssessmentRestController();
      TechnologyAssessmentService technologyAssessmentService0 = new TechnologyAssessmentService();
      Injector.inject(technologyAssessmentRestController0, (Class<?>) TechnologyAssessmentRestController.class, "service", (Object) technologyAssessmentService0);
      Injector.validateBean(technologyAssessmentRestController0, (Class<?>) TechnologyAssessmentRestController.class);
      // Undeclared exception!
      try { 
        technologyAssessmentRestController0.getCustomerDiscountedReceipt(receipt0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 400 BAD_REQUEST \"Invalid parameter, customer cannot be empty\"
         //
         verifyException("com.saud_dev.technology_assessment.validators.ReceiptValidator", e);
      }
  }
}
