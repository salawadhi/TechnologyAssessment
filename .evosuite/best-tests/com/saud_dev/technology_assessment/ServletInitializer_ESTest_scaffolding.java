/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Feb 14 17:42:25 GMT 2019
 */

package com.saud_dev.technology_assessment;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class ServletInitializer_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.saud_dev.technology_assessment.ServletInitializer"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "Cp1252"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\d3v\\AppData\\Local\\Temp\\"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "D:\\Dev\\GitHub\\TechnologyAssessment\\TechnologyAssessment"); 
    java.lang.System.setProperty("user.home", "C:\\Users\\d3v"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "d3v"); 
    java.lang.System.setProperty("user.timezone", "GMT+03:00"); 
    java.lang.System.setProperty("logback.configurationFile", "logback-ctg.xml"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ServletInitializer_ESTest_scaffolding.class.getClassLoader() ,
      "org.springframework.util.ReflectionUtils$FieldFilter",
      "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
      "org.springframework.web.WebApplicationInitializer",
      "org.springframework.context.ApplicationContextException",
      "org.springframework.core.env.PropertyResolver",
      "org.springframework.context.ApplicationEventPublisher",
      "org.springframework.util.ConcurrentReferenceHashMap$Segment$1",
      "org.springframework.core.io.support.SpringFactoriesLoader",
      "org.springframework.core.io.Resource",
      "org.springframework.util.ClassUtils",
      "org.springframework.core.annotation.AnnotationConfigurationException",
      "org.springframework.boot.builder.SpringApplicationBuilder",
      "org.springframework.core.annotation.AnnotationUtils",
      "org.springframework.core.PriorityOrdered",
      "org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementsParser",
      "org.springframework.boot.context.event.ApplicationStartingEvent",
      "org.springframework.core.env.CompositePropertySource",
      "org.springframework.beans.factory.support.BeanNameGenerator",
      "org.springframework.util.CollectionUtils",
      "org.springframework.core.io.InputStreamSource",
      "org.springframework.util.ConcurrentReferenceHashMap$Task",
      "org.springframework.core.annotation.AnnotationAwareOrderComparator",
      "org.springframework.context.ApplicationContextAware",
      "org.springframework.beans.factory.ListableBeanFactory",
      "org.springframework.core.Ordered",
      "org.springframework.core.env.CommandLinePropertySource",
      "org.springframework.util.ConcurrentReferenceHashMap$Entry",
      "org.springframework.boot.ApplicationArguments",
      "org.springframework.core.env.PropertySource",
      "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
      "org.springframework.core.env.ConfigurablePropertyResolver",
      "org.springframework.core.env.EnumerablePropertySource",
      "org.springframework.util.ConcurrentReferenceHashMap$TaskOption",
      "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
      "org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager",
      "org.springframework.context.event.ContextClosedEvent",
      "org.springframework.util.ConcurrentReferenceHashMap",
      "org.springframework.util.ConcurrentReferenceHashMap$ReferenceType",
      "org.springframework.core.KotlinDetector",
      "org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent",
      "org.springframework.core.env.ConfigurableEnvironment",
      "org.springframework.boot.context.properties.source.ConfigurationPropertyName",
      "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements",
      "org.springframework.core.env.EnvironmentCapable",
      "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
      "org.springframework.boot.context.FileEncodingApplicationListener",
      "org.springframework.boot.context.ContextIdApplicationContextInitializer",
      "org.springframework.core.ResolvableType$EmptyType",
      "org.springframework.context.MessageSource",
      "org.springframework.util.ConcurrentReferenceHashMap$1",
      "org.springframework.util.ConcurrentReferenceHashMap$2",
      "org.springframework.util.ConcurrentReferenceHashMap$3",
      "com.saud_dev.technology_assessment.TechnologyAssessmentApplication",
      "org.springframework.util.ConcurrentReferenceHashMap$4",
      "org.springframework.boot.ExitCodeEvent",
      "org.springframework.context.event.SmartApplicationListener",
      "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
      "org.springframework.util.ObjectUtils",
      "org.springframework.util.MultiValueMap",
      "org.springframework.util.ConcurrentReferenceHashMap$Entries",
      "org.springframework.core.DecoratingProxy",
      "org.springframework.beans.BeansException",
      "org.springframework.boot.logging.LogLevel",
      "org.springframework.core.OrderComparator",
      "org.springframework.context.Lifecycle",
      "org.springframework.util.ResourceUtils",
      "org.springframework.context.ApplicationEvent",
      "org.springframework.util.ReflectionUtils$MethodFilter",
      "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException",
      "org.springframework.core.ResolvableType$1",
      "org.springframework.beans.factory.BeanFactory",
      "org.springframework.boot.WebApplicationType",
      "org.springframework.util.ConcurrentReferenceHashMap$5",
      "org.springframework.util.LinkedMultiValueMap",
      "org.springframework.beans.factory.HierarchicalBeanFactory",
      "org.springframework.util.ConcurrentReferenceHashMap$Reference",
      "org.springframework.boot.context.config.DelegatingApplicationListener",
      "org.springframework.boot.context.event.ApplicationPreparedEvent",
      "org.springframework.util.ConcurrentReferenceHashMap$Segment",
      "org.springframework.boot.Banner$Mode",
      "org.springframework.core.env.SimpleCommandLinePropertySource",
      "org.springframework.boot.SpringApplication",
      "org.springframework.core.io.support.PropertiesLoaderUtils",
      "org.springframework.boot.context.config.AnsiOutputApplicationListener",
      "org.springframework.context.ConfigurableApplicationContext",
      "org.springframework.core.ResolvableType$SyntheticParameterizedType",
      "org.springframework.boot.logging.DeferredLog",
      "org.springframework.core.ResolvableType",
      "org.springframework.core.annotation.SynthesizedAnnotation",
      "org.springframework.boot.env.EnvironmentPostProcessor",
      "org.springframework.boot.context.properties.bind.Bindable",
      "org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType",
      "org.springframework.core.NestedRuntimeException",
      "org.springframework.core.io.ResourceLoader",
      "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
      "org.springframework.web.context.WebApplicationContext",
      "org.springframework.context.ApplicationListener",
      "org.springframework.boot.context.event.ApplicationFailedEvent",
      "com.saud_dev.technology_assessment.ServletInitializer",
      "org.springframework.util.PropertiesPersister",
      "org.springframework.boot.web.servlet.support.SpringBootServletInitializer",
      "org.springframework.core.annotation.AnnotationAttributeExtractor",
      "org.springframework.boot.ClearCachesApplicationListener",
      "org.springframework.core.SerializableTypeWrapper$TypeProvider",
      "org.springframework.core.env.Environment",
      "org.springframework.core.env.MapPropertySource",
      "org.springframework.core.ResolvableType$VariableResolver",
      "org.springframework.util.ConcurrentReferenceHashMap$Restructure",
      "org.springframework.core.annotation.OrderUtils",
      "org.springframework.boot.context.logging.LoggingApplicationListener",
      "org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference",
      "org.springframework.beans.BeanUtils",
      "org.springframework.beans.BeanInstantiationException",
      "org.springframework.core.io.UrlResource",
      "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
      "org.springframework.beans.factory.Aware",
      "org.springframework.boot.builder.ParentContextCloserApplicationListener",
      "org.springframework.core.annotation.AnnotationUtils$AnnotationCacheKey",
      "org.springframework.core.io.AbstractFileResolvingResource",
      "org.springframework.core.annotation.AnnotationUtils$AliasDescriptor",
      "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
      "org.springframework.boot.context.config.ConfigFileApplicationListener",
      "org.springframework.boot.liquibase.LiquibaseServiceLocatorApplicationListener",
      "org.springframework.context.event.ApplicationContextEvent",
      "org.springframework.boot.context.logging.ClasspathLoggingApplicationListener",
      "org.springframework.core.annotation.Order",
      "org.springframework.context.event.GenericApplicationListener",
      "org.springframework.core.annotation.AliasFor",
      "org.springframework.beans.FatalBeanException",
      "org.springframework.boot.Banner",
      "org.springframework.core.NestedIOException",
      "org.springframework.context.ApplicationContext",
      "org.springframework.web.context.ConfigurableWebApplicationContext",
      "org.springframework.core.io.AbstractResource",
      "org.springframework.core.SerializableTypeWrapper",
      "org.springframework.core.ResolvableType$TypeVariablesVariableResolver",
      "org.springframework.boot.context.event.SpringApplicationEvent",
      "org.springframework.util.ReflectionUtils",
      "org.springframework.core.io.support.ResourcePatternResolver",
      "org.springframework.context.ApplicationContextInitializer",
      "org.springframework.util.Assert",
      "org.springframework.util.StringUtils"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("org.springframework.boot.builder.SpringApplicationBuilder", false, ServletInitializer_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ServletInitializer_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.springframework.boot.web.servlet.support.SpringBootServletInitializer",
      "com.saud_dev.technology_assessment.ServletInitializer",
      "org.springframework.boot.builder.SpringApplicationBuilder",
      "org.springframework.boot.SpringApplication",
      "org.springframework.util.Assert",
      "org.springframework.util.ClassUtils",
      "org.springframework.util.ConcurrentReferenceHashMap$ReferenceType",
      "org.springframework.util.ConcurrentReferenceHashMap",
      "org.springframework.util.ConcurrentReferenceHashMap$Segment",
      "org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager",
      "org.springframework.core.io.support.SpringFactoriesLoader",
      "org.springframework.util.ConcurrentReferenceHashMap$Restructure",
      "org.springframework.util.LinkedMultiValueMap",
      "org.springframework.core.io.AbstractResource",
      "org.springframework.core.io.AbstractFileResolvingResource",
      "org.springframework.core.io.UrlResource",
      "org.springframework.util.StringUtils",
      "org.springframework.util.CollectionUtils",
      "org.springframework.core.io.support.PropertiesLoaderUtils",
      "org.springframework.util.ResourceUtils",
      "org.springframework.util.ConcurrentReferenceHashMap$Task",
      "org.springframework.util.ConcurrentReferenceHashMap$1",
      "org.springframework.util.ConcurrentReferenceHashMap$TaskOption",
      "org.springframework.util.ConcurrentReferenceHashMap$Entries",
      "org.springframework.util.ConcurrentReferenceHashMap$Segment$1",
      "org.springframework.util.ConcurrentReferenceHashMap$Entry",
      "org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference",
      "org.springframework.beans.BeanUtils",
      "org.springframework.util.ReflectionUtils",
      "org.springframework.core.KotlinDetector",
      "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
      "org.springframework.boot.context.ContextIdApplicationContextInitializer",
      "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
      "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
      "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
      "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
      "org.springframework.boot.logging.LogLevel",
      "org.springframework.core.OrderComparator",
      "org.springframework.core.annotation.AnnotationAwareOrderComparator",
      "org.springframework.core.annotation.OrderUtils",
      "org.springframework.core.annotation.AnnotationUtils",
      "org.springframework.core.annotation.AnnotationUtils$AnnotationCacheKey",
      "org.springframework.util.ObjectUtils",
      "org.springframework.boot.ClearCachesApplicationListener",
      "org.springframework.boot.builder.ParentContextCloserApplicationListener",
      "org.springframework.boot.context.FileEncodingApplicationListener",
      "org.springframework.boot.context.config.AnsiOutputApplicationListener",
      "org.springframework.boot.context.properties.bind.Bindable",
      "org.springframework.core.ResolvableType$EmptyType",
      "org.springframework.core.ResolvableType",
      "org.springframework.boot.context.config.ConfigFileApplicationListener",
      "org.springframework.boot.logging.DeferredLog",
      "org.springframework.boot.context.config.DelegatingApplicationListener",
      "org.springframework.boot.context.logging.ClasspathLoggingApplicationListener",
      "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements",
      "org.springframework.boot.context.properties.source.ConfigurationPropertyName",
      "org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementsParser",
      "org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType",
      "org.springframework.core.SerializableTypeWrapper",
      "org.springframework.core.ResolvableType$SyntheticParameterizedType",
      "org.springframework.core.ResolvableType$TypeVariablesVariableResolver",
      "org.springframework.boot.context.logging.LoggingApplicationListener",
      "org.springframework.boot.liquibase.LiquibaseServiceLocatorApplicationListener",
      "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
      "org.springframework.core.annotation.AnnotationUtils$AliasDescriptor",
      "org.springframework.util.StopWatch",
      "org.springframework.boot.SpringApplicationRunListeners",
      "org.springframework.boot.context.event.EventPublishingRunListener",
      "org.springframework.context.event.AbstractApplicationEventMulticaster",
      "org.springframework.context.event.SimpleApplicationEventMulticaster",
      "org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever",
      "org.springframework.aop.framework.AopProxyUtils",
      "org.springframework.context.ApplicationEvent",
      "org.springframework.boot.context.event.SpringApplicationEvent",
      "org.springframework.boot.context.event.ApplicationStartingEvent",
      "org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey",
      "org.springframework.context.event.GenericApplicationListenerAdapter",
      "org.springframework.core.ResolvableType$DefaultVariableResolver",
      "org.springframework.core.ResolvableType$WildcardBounds",
      "org.springframework.aop.support.AopUtils",
      "org.springframework.boot.logging.LoggingSystem",
      "org.springframework.boot.logging.LoggerConfigurationComparator",
      "org.springframework.boot.logging.AbstractLoggingSystem",
      "org.springframework.boot.logging.Slf4JLoggingSystem",
      "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels",
      "org.springframework.boot.logging.logback.LogbackLoggingSystem$1",
      "org.springframework.boot.logging.logback.LogbackLoggingSystem",
      "org.springframework.boot.autoconfigure.BackgroundPreinitializer$1",
      "org.springframework.boot.DefaultApplicationArguments",
      "org.springframework.core.env.PropertySource",
      "org.springframework.core.env.EnumerablePropertySource",
      "org.springframework.core.env.CommandLinePropertySource",
      "org.springframework.core.env.SimpleCommandLinePropertySource",
      "org.springframework.boot.DefaultApplicationArguments$Source",
      "org.springframework.core.env.SimpleCommandLineArgsParser",
      "org.springframework.core.env.CommandLineArgs",
      "org.springframework.boot.SpringApplication$1",
      "org.springframework.core.env.AbstractEnvironment",
      "org.springframework.core.env.StandardEnvironment",
      "org.springframework.web.context.support.StandardServletEnvironment",
      "org.springframework.core.env.MutablePropertySources",
      "org.springframework.core.env.AbstractPropertyResolver",
      "org.springframework.core.env.PropertySourcesPropertyResolver",
      "org.springframework.core.env.PropertySource$StubPropertySource",
      "org.springframework.jndi.JndiAccessor",
      "org.springframework.jndi.JndiLocatorSupport",
      "org.springframework.core.SpringProperties",
      "org.springframework.jndi.JndiLocatorDelegate",
      "org.springframework.jndi.JndiPropertySource",
      "org.springframework.jndi.JndiTemplate",
      "org.springframework.core.env.MapPropertySource",
      "org.springframework.core.env.SystemEnvironmentPropertySource",
      "org.springframework.core.convert.support.GenericConversionService$NoOpConverter",
      "org.springframework.core.convert.support.GenericConversionService",
      "org.springframework.format.support.FormattingConversionService",
      "org.springframework.boot.convert.ApplicationConversionService",
      "org.springframework.core.convert.support.GenericConversionService$Converters",
      "org.springframework.core.convert.support.DefaultConversionService",
      "org.springframework.core.convert.support.NumberToNumberConverterFactory",
      "org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter",
      "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
      "org.springframework.core.convert.support.GenericConversionService$ConvertersForPair",
      "org.springframework.core.convert.support.StringToNumberConverterFactory",
      "org.springframework.core.convert.support.ObjectToStringConverter",
      "org.springframework.core.convert.support.GenericConversionService$ConverterAdapter",
      "org.springframework.core.convert.support.StringToCharacterConverter",
      "org.springframework.core.convert.support.NumberToCharacterConverter",
      "org.springframework.core.convert.support.CharacterToNumberFactory",
      "org.springframework.core.convert.support.StringToBooleanConverter",
      "org.springframework.core.convert.support.StringToEnumConverterFactory",
      "org.springframework.core.convert.support.AbstractConditionalEnumConverter",
      "org.springframework.core.convert.support.EnumToStringConverter",
      "org.springframework.core.convert.support.IntegerToEnumConverterFactory",
      "org.springframework.core.convert.support.EnumToIntegerConverter",
      "org.springframework.core.convert.support.StringToLocaleConverter",
      "org.springframework.core.convert.support.StringToCharsetConverter",
      "org.springframework.core.convert.support.StringToCurrencyConverter",
      "org.springframework.core.convert.support.StringToPropertiesConverter",
      "org.springframework.core.convert.support.PropertiesToStringConverter",
      "org.springframework.core.convert.support.StringToUUIDConverter",
      "org.springframework.core.convert.support.ArrayToCollectionConverter",
      "org.springframework.core.convert.support.CollectionToArrayConverter",
      "org.springframework.core.convert.support.ArrayToArrayConverter",
      "org.springframework.core.convert.support.CollectionToCollectionConverter",
      "org.springframework.core.convert.support.MapToMapConverter",
      "org.springframework.core.convert.support.ArrayToStringConverter",
      "org.springframework.core.convert.support.CollectionToStringConverter",
      "org.springframework.core.convert.support.StringToArrayConverter",
      "org.springframework.core.convert.support.ArrayToObjectConverter",
      "org.springframework.core.convert.support.ObjectToArrayConverter",
      "org.springframework.core.convert.support.StringToCollectionConverter",
      "org.springframework.core.convert.support.CollectionToObjectConverter",
      "org.springframework.core.convert.support.ObjectToCollectionConverter",
      "org.springframework.core.convert.TypeDescriptor$AnnotatedElementAdapter",
      "org.springframework.core.convert.TypeDescriptor",
      "org.springframework.core.convert.support.StreamConverter",
      "org.springframework.core.convert.support.ByteBufferConverter",
      "org.springframework.core.convert.support.StringToTimeZoneConverter",
      "org.springframework.core.convert.support.ZoneIdToTimeZoneConverter",
      "org.springframework.core.convert.support.ZonedDateTimeToCalendarConverter",
      "org.springframework.core.convert.support.ObjectToObjectConverter",
      "org.springframework.core.convert.support.IdToEntityConverter",
      "org.springframework.core.convert.support.FallbackObjectToStringConverter",
      "org.springframework.core.convert.support.ObjectToOptionalConverter",
      "org.springframework.format.support.DefaultFormattingConversionService",
      "org.springframework.context.support.EmbeddedValueResolutionSupport",
      "org.springframework.format.number.NumberFormatAnnotationFormatterFactory",
      "org.springframework.core.GenericTypeResolver",
      "org.springframework.util.NumberUtils",
      "org.springframework.format.support.FormattingConversionService$AnnotationPrinterConverter",
      "org.springframework.format.support.FormattingConversionService$AnnotationParserConverter",
      "org.springframework.format.datetime.standard.DateTimeFormatterRegistrar",
      "org.springframework.format.datetime.standard.DateTimeFormatterRegistrar$Type",
      "org.springframework.format.datetime.standard.DateTimeFormatterFactory",
      "org.springframework.format.datetime.standard.DateTimeConverters",
      "org.springframework.format.datetime.DateFormatterRegistrar",
      "org.springframework.format.datetime.DateFormatterRegistrar$DateToLongConverter",
      "org.springframework.format.datetime.DateFormatterRegistrar$DateToCalendarConverter",
      "org.springframework.format.datetime.DateFormatterRegistrar$CalendarToDateConverter",
      "org.springframework.format.datetime.DateFormatterRegistrar$CalendarToLongConverter",
      "org.springframework.format.datetime.DateFormatterRegistrar$LongToDateConverter",
      "org.springframework.format.datetime.DateFormatterRegistrar$LongToCalendarConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$LocalDateTimeToLocalDateConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$LocalDateTimeToLocalTimeConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$ZonedDateTimeToLocalDateConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$ZonedDateTimeToLocalTimeConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$ZonedDateTimeToLocalDateTimeConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$ZonedDateTimeToOffsetDateTimeConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$ZonedDateTimeToInstantConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$OffsetDateTimeToLocalDateConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$OffsetDateTimeToLocalTimeConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$OffsetDateTimeToLocalDateTimeConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$OffsetDateTimeToZonedDateTimeConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$OffsetDateTimeToInstantConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$CalendarToZonedDateTimeConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$CalendarToOffsetDateTimeConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$CalendarToLocalDateConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$CalendarToLocalTimeConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$CalendarToLocalDateTimeConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$CalendarToInstantConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$LongToInstantConverter",
      "org.springframework.format.datetime.standard.DateTimeConverters$InstantToLongConverter",
      "org.springframework.format.datetime.standard.DateTimeFormatterRegistrar$1",
      "org.springframework.format.datetime.standard.TemporalAccessorPrinter",
      "org.springframework.format.datetime.standard.TemporalAccessorParser",
      "org.springframework.format.support.FormattingConversionService$PrinterConverter",
      "org.springframework.format.support.FormattingConversionService$ParserConverter",
      "org.springframework.format.datetime.standard.InstantFormatter",
      "org.springframework.format.datetime.standard.PeriodFormatter",
      "org.springframework.format.datetime.standard.DurationFormatter",
      "org.springframework.format.datetime.standard.YearFormatter",
      "org.springframework.format.datetime.standard.MonthFormatter",
      "org.springframework.format.datetime.standard.YearMonthFormatter",
      "org.springframework.format.datetime.standard.MonthDayFormatter",
      "org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory",
      "org.springframework.format.datetime.DateTimeFormatAnnotationFormatterFactory",
      "org.springframework.boot.convert.CharArrayFormatter",
      "org.springframework.boot.convert.InetAddressFormatter",
      "org.springframework.boot.convert.IsoOffsetFormatter",
      "org.springframework.boot.convert.ArrayToDelimitedStringConverter",
      "org.springframework.boot.convert.CollectionToDelimitedStringConverter",
      "org.springframework.boot.convert.DelimitedStringToArrayConverter",
      "org.springframework.boot.convert.DelimitedStringToCollectionConverter",
      "org.springframework.boot.convert.StringToDurationConverter",
      "org.springframework.boot.convert.DurationToStringConverter",
      "org.springframework.boot.convert.NumberToDurationConverter",
      "org.springframework.boot.convert.DurationToNumberConverter",
      "org.springframework.boot.convert.StringToDataSizeConverter",
      "org.springframework.boot.convert.NumberToDataSizeConverter",
      "org.springframework.boot.convert.StringToEnumIgnoringCaseConverterFactory",
      "org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent",
      "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
      "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
      "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
      "org.springframework.boot.test.web.SpringBootTestRandomPortEnvironmentPostProcessor",
      "org.springframework.core.env.PropertySource$ComparisonPropertySource",
      "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource",
      "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor$JsonPropertyValue",
      "org.springframework.boot.cloud.CloudPlatform",
      "org.springframework.boot.env.RandomValuePropertySource",
      "org.springframework.boot.context.config.ConfigFileApplicationListener$Loader",
      "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver",
      "org.springframework.util.PropertyPlaceholderHelper",
      "org.springframework.core.io.DefaultResourceLoader",
      "org.springframework.boot.env.PropertiesPropertySourceLoader",
      "org.springframework.boot.env.YamlPropertySourceLoader",
      "org.springframework.boot.context.config.ConfigFileApplicationListener$Profile",
      "org.springframework.core.io.FileUrlResource",
      "org.springframework.boot.logging.DeferredLog$Line",
      "org.springframework.core.io.ClassPathResource",
      "org.springframework.boot.context.config.ConfigFileApplicationListener$DocumentsCacheKey",
      "org.springframework.boot.env.OriginTrackedPropertiesLoader",
      "org.springframework.boot.env.OriginTrackedPropertiesLoader$CharacterReader",
      "org.springframework.boot.context.properties.bind.JavaBeanBinder",
      "org.springframework.boot.context.properties.bind.Binder",
      "org.springframework.boot.context.properties.source.ConfigurationPropertySources",
      "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources",
      "org.springframework.boot.context.properties.bind.BindHandler$1",
      "org.springframework.boot.context.properties.bind.BindHandler",
      "org.springframework.boot.context.properties.bind.Binder$Context",
      "org.springframework.boot.context.properties.bind.BindConverter",
      "org.springframework.boot.context.properties.bind.BindConverter$TypeConverterConversionService",
      "org.springframework.boot.context.properties.bind.BindConverter$TypeConverterConverter",
      "org.springframework.beans.PropertyEditorRegistrySupport",
      "org.springframework.beans.TypeConverterSupport",
      "org.springframework.beans.SimpleTypeConverter",
      "org.springframework.beans.TypeConverterDelegate",
      "org.springframework.boot.context.properties.bind.BindConverter$CompositeConversionService",
      "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources$SourcesIterator",
      "org.springframework.boot.context.properties.source.SpringConfigurationPropertySource",
      "org.springframework.boot.context.properties.source.SpringConfigurationPropertySource$DelegatingPropertyMapper",
      "org.springframework.boot.context.properties.source.DefaultPropertyMapper",
      "org.springframework.boot.context.properties.source.PropertyMapping",
      "org.springframework.boot.context.properties.source.DefaultPropertyMapper$LastMapping",
      "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource",
      "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$CacheKey",
      "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Cache",
      "org.springframework.boot.context.properties.source.SystemEnvironmentPropertyMapper",
      "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form",
      "org.springframework.boot.context.properties.source.PropertyMapper",
      "org.springframework.boot.context.properties.source.ConfigurationPropertyState",
      "org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean",
      "org.springframework.boot.context.properties.bind.BindResult",
      "org.springframework.boot.ansi.AnsiOutput$Enabled",
      "org.springframework.boot.ansi.AnsiColor",
      "org.springframework.boot.ansi.AnsiOutput",
      "org.springframework.boot.logging.LoggingSystemProperties",
      "org.springframework.boot.system.ApplicationPid",
      "org.springframework.boot.logging.LogFile",
      "org.springframework.boot.logging.LoggingInitializationContext",
      "org.springframework.boot.logging.logback.SpringBootJoranConfigurator",
      "org.springframework.boot.logging.logback.SpringPropertyAction",
      "org.springframework.boot.logging.logback.SpringProfileAction",
      "org.springframework.boot.context.properties.bind.AggregateBinder",
      "org.springframework.boot.context.properties.bind.MapBinder",
      "org.springframework.core.CollectionFactory",
      "org.springframework.boot.context.properties.source.FilteredConfigurationPropertiesSource",
      "org.springframework.boot.context.properties.bind.MapBinder$EntryBinder",
      "org.springframework.boot.context.properties.source.FilteredIterableConfigurationPropertiesSource",
      "org.springframework.boot.EnvironmentConverter",
      "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource",
      "org.springframework.boot.SpringBootBanner",
      "org.springframework.boot.SpringApplicationBannerPrinter",
      "org.springframework.boot.SpringApplicationBannerPrinter$Banners",
      "org.springframework.core.io.DefaultResourceLoader$ClassPathContextResource",
      "org.springframework.boot.SpringBootVersion",
      "org.springframework.boot.ansi.AnsiStyle",
      "org.springframework.boot.SpringApplicationBannerPrinter$PrintedBanner",
      "org.springframework.context.support.AbstractApplicationContext",
      "org.springframework.context.support.GenericApplicationContext",
      "org.springframework.web.context.support.GenericWebApplicationContext",
      "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext",
      "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext",
      "org.springframework.core.io.support.PathMatchingResourcePatternResolver",
      "org.springframework.web.context.support.ServletContextResourcePatternResolver",
      "org.springframework.util.AntPathMatcher",
      "org.springframework.util.AntPathMatcher$PathSeparatorPatternCache",
      "org.springframework.core.SimpleAliasRegistry",
      "org.springframework.beans.factory.support.DefaultSingletonBeanRegistry",
      "org.springframework.beans.factory.support.FactoryBeanRegistrySupport",
      "org.springframework.beans.factory.support.AbstractBeanFactory",
      "org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory",
      "org.springframework.beans.factory.support.DefaultListableBeanFactory",
      "org.springframework.core.NamedThreadLocal",
      "org.springframework.beans.factory.support.SimpleInstantiationStrategy",
      "org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy",
      "org.springframework.core.PrioritizedParameterNameDiscoverer",
      "org.springframework.core.DefaultParameterNameDiscoverer",
      "org.springframework.core.GraalDetector",
      "org.springframework.core.StandardReflectionParameterNameDiscoverer",
      "org.springframework.core.LocalVariableTableParameterNameDiscoverer",
      "org.springframework.beans.factory.support.SimpleAutowireCandidateResolver",
      "org.springframework.context.annotation.AnnotatedBeanDefinitionReader",
      "org.springframework.context.annotation.AnnotationBeanNameGenerator",
      "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
      "org.springframework.context.annotation.ScopedProxyMode",
      "org.springframework.context.annotation.ConditionEvaluator",
      "org.springframework.context.annotation.ConditionEvaluator$ConditionContextImpl",
      "org.springframework.context.annotation.AnnotationConfigUtils",
      "org.springframework.beans.factory.support.GenericTypeAwareAutowireCandidateResolver",
      "org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver",
      "org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver",
      "org.springframework.core.AttributeAccessorSupport",
      "org.springframework.beans.BeanMetadataAttributeAccessor",
      "org.springframework.beans.factory.support.AbstractBeanDefinition",
      "org.springframework.beans.factory.support.RootBeanDefinition",
      "org.springframework.beans.factory.config.BeanDefinitionHolder",
      "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider",
      "org.springframework.context.annotation.ClassPathBeanDefinitionScanner",
      "org.springframework.beans.factory.support.BeanDefinitionDefaults",
      "org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter",
      "org.springframework.core.type.filter.AnnotationTypeFilter",
      "org.springframework.core.io.support.ResourcePatternUtils",
      "org.springframework.core.type.classreading.SimpleMetadataReaderFactory",
      "org.springframework.core.type.classreading.CachingMetadataReaderFactory",
      "org.springframework.context.index.CandidateComponentsIndexLoader",
      "org.springframework.boot.diagnostics.FailureAnalyzers",
      "org.springframework.boot.diagnostics.AbstractFailureAnalyzer",
      "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
      "org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
      "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
      "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
      "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
      "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
      "org.springframework.boot.diagnostics.analyzer.ConnectorStartFailureAnalyzer",
      "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
      "org.springframework.boot.diagnostics.analyzer.AbstractInjectionFailureAnalyzer",
      "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
      "org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
      "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
      "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
      "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
      "org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
      "org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
      "org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer",
      "org.springframework.boot.autoconfigure.session.NonUniqueSessionRepositoryFailureAnalyzer",
      "org.springframework.core.type.classreading.CachingMetadataReaderFactory$LocalResourceCache",
      "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport$AncestorsMatchedCondition",
      "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport",
      "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer$CachingMetadataReaderFactoryPostProcessor",
      "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId",
      "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer$ConfigurationWarningsPostProcessor",
      "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer$ComponentScanPackageCheck",
      "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener$ConditionEvaluationReportListener",
      "org.springframework.beans.factory.BeanFactoryUtils",
      "org.springframework.boot.context.event.ApplicationContextInitializedEvent",
      "org.springframework.boot.StartupInfoLogger",
      "org.springframework.boot.BeanDefinitionLoader",
      "org.springframework.beans.factory.support.AbstractBeanDefinitionReader",
      "org.springframework.core.Constants",
      "org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
      "org.springframework.beans.factory.support.DefaultBeanNameGenerator",
      "org.springframework.beans.factory.parsing.FailFastProblemReporter",
      "org.springframework.beans.factory.parsing.EmptyReaderEventListener",
      "org.springframework.beans.factory.parsing.NullSourceExtractor",
      "org.springframework.beans.factory.xml.DefaultDocumentLoader",
      "org.springframework.util.xml.SimpleSaxErrorHandler",
      "org.springframework.util.xml.XmlValidationModeDetector",
      "org.springframework.boot.BeanDefinitionLoader$ClassExcludeFilter",
      "org.springframework.beans.factory.support.GenericBeanDefinition",
      "org.springframework.beans.factory.annotation.AnnotatedGenericBeanDefinition",
      "org.springframework.core.type.StandardClassMetadata",
      "org.springframework.core.type.StandardAnnotationMetadata",
      "org.springframework.context.annotation.ScopeMetadata",
      "org.springframework.core.annotation.AnnotationAttributes",
      "org.springframework.beans.factory.support.BeanDefinitionReaderUtils",
      "org.springframework.boot.context.event.ApplicationPreparedEvent",
      "org.springframework.boot.logging.DeferredLog$1",
      "org.springframework.boot.context.config.ConfigFileApplicationListener$PropertySourceOrderingPostProcessor",
      "org.springframework.web.context.support.WebApplicationContextUtils",
      "org.springframework.core.env.MissingRequiredPropertiesException",
      "org.springframework.context.expression.StandardBeanExpressionResolver",
      "org.springframework.context.expression.StandardBeanExpressionResolver$1",
      "org.springframework.expression.common.TemplateAwareExpressionParser",
      "org.springframework.expression.spel.standard.SpelExpressionParser",
      "org.springframework.expression.spel.SpelCompilerMode",
      "org.springframework.expression.spel.SpelParserConfiguration",
      "org.springframework.beans.support.ResourceEditorRegistrar",
      "org.springframework.context.support.ApplicationContextAwareProcessor",
      "org.springframework.beans.factory.config.EmbeddedValueResolver",
      "org.springframework.beans.factory.config.BeanExpressionContext",
      "org.springframework.context.support.ApplicationListenerDetector",
      "org.springframework.web.context.support.ServletContextAwareProcessor",
      "org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor",
      "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext$ExistingWebApplicationScopes",
      "org.springframework.web.context.request.AbstractRequestAttributesScope",
      "org.springframework.web.context.request.RequestScope",
      "org.springframework.web.context.request.SessionScope",
      "org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory",
      "org.springframework.web.context.support.WebApplicationContextUtils$ResponseObjectFactory",
      "org.springframework.web.context.support.WebApplicationContextUtils$SessionObjectFactory",
      "org.springframework.web.context.support.WebApplicationContextUtils$WebRequestObjectFactory",
      "org.springframework.web.context.support.WebApplicationContextUtils$FacesDependencyRegistrar",
      "org.springframework.web.context.support.WebApplicationContextUtils$FacesDependencyRegistrar$1",
      "org.springframework.web.context.support.WebApplicationContextUtils$FacesDependencyRegistrar$2",
      "org.springframework.context.support.PostProcessorRegistrationDelegate",
      "org.springframework.beans.factory.support.BeanDefinitionBuilder",
      "org.springframework.beans.MutablePropertyValues",
      "org.springframework.beans.factory.config.RuntimeBeanReference",
      "org.springframework.beans.PropertyValue",
      "org.springframework.core.ResolvableType$1",
      "org.springframework.context.annotation.ConfigurationClassPostProcessor",
      "org.springframework.beans.factory.parsing.PassThroughSourceExtractor",
      "org.springframework.context.annotation.ConfigurationClassPostProcessor$1",
      "org.springframework.beans.AbstractPropertyAccessor",
      "org.springframework.beans.AbstractNestablePropertyAccessor",
      "org.springframework.beans.BeanWrapperImpl",
      "org.springframework.core.io.ResourceEditor",
      "org.springframework.beans.propertyeditors.InputStreamEditor",
      "org.springframework.beans.propertyeditors.InputSourceEditor",
      "org.springframework.beans.propertyeditors.FileEditor",
      "org.springframework.beans.propertyeditors.PathEditor",
      "org.springframework.beans.propertyeditors.ReaderEditor",
      "org.springframework.beans.propertyeditors.URLEditor",
      "org.springframework.beans.propertyeditors.URIEditor",
      "org.springframework.beans.propertyeditors.ClassEditor",
      "org.springframework.beans.propertyeditors.ClassArrayEditor",
      "org.springframework.core.io.support.ResourceArrayPropertyEditor",
      "org.springframework.beans.factory.support.BeanDefinitionValueResolver",
      "org.springframework.expression.common.LiteralExpression",
      "org.springframework.expression.spel.support.StandardEvaluationContext",
      "org.springframework.expression.spel.support.StandardTypeComparator",
      "org.springframework.expression.spel.support.StandardOperatorOverloader",
      "org.springframework.expression.TypedValue",
      "org.springframework.context.expression.BeanExpressionContextAccessor",
      "org.springframework.expression.spel.support.ReflectivePropertyAccessor",
      "org.springframework.context.expression.BeanFactoryAccessor",
      "org.springframework.context.expression.MapAccessor",
      "org.springframework.context.expression.EnvironmentAccessor",
      "org.springframework.context.expression.BeanFactoryResolver",
      "org.springframework.expression.spel.support.StandardTypeLocator",
      "org.springframework.expression.spel.support.StandardTypeConverter",
      "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer$SharedMetadataReaderFactoryBean",
      "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory",
      "org.springframework.beans.factory.support.DisposableBeanAdapter",
      "org.springframework.beans.PropertyAccessorUtils",
      "org.springframework.beans.ExtendedBeanInfoFactory",
      "org.springframework.beans.CachedIntrospectionResults",
      "org.springframework.beans.ExtendedBeanInfo",
      "org.springframework.beans.GenericTypeAwarePropertyDescriptor",
      "org.springframework.core.BridgeMethodResolver",
      "org.springframework.core.MethodParameter",
      "org.springframework.core.SerializableTypeWrapper$MethodParameterTypeProvider",
      "org.springframework.core.SerializableTypeWrapper$TypeProxyInvocationHandler",
      "org.springframework.core.SerializableTypeWrapper$MethodInvokeTypeProvider",
      "org.springframework.beans.AbstractNestablePropertyAccessor$PropertyHandler",
      "org.springframework.beans.BeanWrapperImpl$BeanPropertyHandler",
      "org.springframework.core.convert.Property",
      "org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey",
      "org.springframework.core.convert.support.ConversionUtils",
      "org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder",
      "org.springframework.core.Conventions",
      "org.springframework.context.annotation.ConfigurationClassUtils",
      "org.springframework.core.annotation.AnnotatedElementUtils$SimpleAnnotationProcessor",
      "org.springframework.core.annotation.AnnotatedElementUtils$AlwaysTrueBooleanAnnotationProcessor",
      "org.springframework.core.annotation.AnnotatedElementUtils",
      "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter",
      "org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor",
      "org.springframework.context.event.EventListenerMethodProcessor",
      "org.springframework.context.expression.CachedExpressionEvaluator",
      "org.springframework.context.event.EventExpressionEvaluator",
      "org.springframework.context.event.DefaultEventListenerFactory",
      "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
      "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
      "org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor",
      "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
      "org.springframework.jndi.support.SimpleJndiBeanFactory",
      "org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor",
      "org.springframework.context.support.MessageSourceSupport",
      "org.springframework.context.support.DelegatingMessageSource",
      "org.springframework.ui.context.support.UiApplicationContextUtils",
      "org.springframework.ui.context.support.ResourceBundleThemeSource",
      "org.springframework.core.NestedRuntimeException",
      "org.springframework.beans.BeansException",
      "org.springframework.beans.FatalBeanException",
      "org.springframework.context.ApplicationContextException",
      "org.springframework.util.ConcurrentReferenceHashMap$EntrySet",
      "org.springframework.util.ConcurrentReferenceHashMap$EntryIterator",
      "org.springframework.boot.context.event.ApplicationFailedEvent",
      "org.springframework.boot.context.event.EventPublishingRunListener$LoggingErrorHandler",
      "org.apache.juli.logging.LogFactory",
      "org.apache.juli.logging.DirectJDKLog",
      "org.apache.tomcat.util.res.StringManager",
      "org.apache.tomcat.util.res.StringManager$1",
      "org.apache.catalina.util.LifecycleBase",
      "org.apache.catalina.util.LifecycleMBeanBase",
      "org.apache.catalina.core.ContainerBase",
      "org.apache.catalina.core.StandardContext$1",
      "org.apache.catalina.core.StandardContext",
      "org.apache.catalina.Globals",
      "org.apache.catalina.core.ApplicationContext",
      "org.apache.catalina.core.ApplicationContextFacade",
      "org.springframework.web.context.WebApplicationContext",
      "org.springframework.core.annotation.AnnotatedElementUtils$MergedAnnotationAttributesProcessor",
      "org.springframework.core.annotation.AnnotationUtils$DefaultValueHolder",
      "org.springframework.core.annotation.AnnotatedElementUtils$2",
      "org.springframework.beans.BeanMetadataAttribute",
      "org.springframework.core.io.support.DefaultPropertySourceFactory",
      "org.springframework.context.annotation.ConfigurationClassParser",
      "org.springframework.context.annotation.ConfigurationClassParser$ImportStack",
      "org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorHandler",
      "org.springframework.context.annotation.ComponentScanAnnotationParser",
      "org.springframework.context.annotation.ConfigurationClass",
      "org.springframework.core.io.DescriptiveResource",
      "org.springframework.context.annotation.ConfigurationCondition$ConfigurationPhase",
      "org.springframework.context.annotation.ConfigurationClassParser$SourceClass",
      "org.springframework.context.annotation.ComponentScanAnnotationParser$2",
      "org.springframework.boot.context.TypeExcludeFilter",
      "org.springframework.context.annotation.ParserStrategyUtils",
      "org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
      "org.springframework.context.annotation.ComponentScanAnnotationParser$1",
      "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
      "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationEntry",
      "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
      "org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorHolder",
      "org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler",
      "org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGrouping",
      "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
      "org.springframework.boot.autoconfigure.AutoConfigurationMetadataLoader",
      "org.springframework.boot.autoconfigure.AutoConfigurationMetadataLoader$PropertiesAutoConfigurationMetadata",
      "org.springframework.boot.context.properties.bind.IndexedElementsBinder",
      "org.springframework.boot.context.properties.bind.ArrayBinder",
      "org.springframework.boot.context.properties.bind.AggregateBinder$AggregateSupplier",
      "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier",
      "org.springframework.boot.autoconfigure.condition.SpringBootCondition",
      "org.springframework.boot.autoconfigure.condition.FilteringSpringBootCondition",
      "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
      "org.springframework.boot.autoconfigure.condition.OnClassCondition",
      "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
      "org.springframework.boot.autoconfigure.condition.OnClassCondition$StandardOutcomesResolver",
      "org.springframework.boot.autoconfigure.condition.OnClassCondition$ThreadedOutcomesResolver",
      "org.springframework.boot.autoconfigure.condition.FilteringSpringBootCondition$ClassNameFilter",
      "org.springframework.boot.autoconfigure.condition.ConditionMessage",
      "org.springframework.boot.autoconfigure.condition.ConditionMessage$Builder",
      "org.springframework.boot.autoconfigure.condition.ConditionMessage$ItemsBuilder",
      "org.springframework.boot.autoconfigure.condition.ConditionMessage$Style",
      "org.springframework.boot.autoconfigure.condition.ConditionOutcome",
      "org.springframework.boot.ExitCodeGenerators",
      "org.springframework.context.support.LiveBeansView",
      "org.springframework.context.event.ApplicationContextEvent",
      "org.springframework.context.event.ContextClosedEvent",
      "org.springframework.mock.web.MockServletContext",
      "org.springframework.mock.web.MockSessionCookieConfig",
      "org.springframework.mock.web.MockRequestDispatcher",
      "org.springframework.boot.web.servlet.support.ServletContextApplicationContextInitializer",
      "org.springframework.boot.web.servlet.support.SpringBootServletInitializer$WebEnvironmentPropertySourceInitializer",
      "org.springframework.web.context.support.ServletContextPropertySource",
      "org.springframework.beans.factory.annotation.Autowire",
      "org.springframework.core.type.StandardMethodMetadata",
      "org.springframework.context.annotation.ConfigurationMethod",
      "org.springframework.context.annotation.BeanMethod",
      "org.springframework.boot.Banner$Mode",
      "org.springframework.boot.WebApplicationType"
    );
  }
}
